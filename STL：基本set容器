#include<iostream>
#include<algorithm>
#include<vector>
#include<string>
#include<set>
#include<map>
//set容器例程：set中的元素不允许直接修改 
//注意，set是不会保存重复的元素的，如果要保存重复元素
//请用multiset 
using namespace std;

int main(){
	set<int> s;//如何初始化？ 
	s.insert(1);//insert
	s.insert(2);
	s.insert(3);
	s.insert(1);
	cout<<"size:"<<s.size()<<endl;//check the size of the set
	cout<<"maxsize:"<<s.max_size()<<endl;//check the max_size
	cout<<"first one"<<*s.begin()<<endl;//check the first one
	cout<<"last one"<<*s.end()<<endl;//check the last one
	s.clear();
	return 0;
}

/*
输出： 
3
461168601842738790
1
3


其他有用的接口：定位器 == iterator 
erase(iterator)  ,删除定位器iterator指向的值

erase(first,second),删除定位器first和second之间的值

erase(key_value),删除键值key_value的值

find()，返回给定值值得定位器，如果没找到则返回end()。

count(elem); //返回elem的个数，对set，要么0，要么1，对multiset可能大于1

lower_bound(key_value) ，返回第一个大于等于key_value的定位器

upper_bound(key_value)，返回最后一个大于等于key_value的定位器
*/
